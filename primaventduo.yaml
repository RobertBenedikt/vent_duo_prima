globals:
  - id: state
    type: int
    restore_value: no
    initial_value: '0'  # 0 = OFF, 1 = SPEED1, 2 = SPEED2

# Nastavení hardwarových komponent
i2c:
  sda: GPIO8
  scl: GPIO9
  scan: true
  id: bus_a

# OLED displej 0.91" (128x32)
display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x32"
    address: 0x3C
    id: oled_display
    lambda: |-
      // Zobrazení stavu ventilátoru
      it.printf(32, 0, id(font_small), "FAN CONTROL");
      it.printf(32, 15, id(font_large), "%s", id(fan_state).state.c_str());

font:
  - file: "gfonts://Roboto Mono"
    id: font_small
    size: 12
  - file: "gfonts://Roboto Mono"
    id: font_large
    size: 16

# Tlačítko
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO7
      mode: INPUT_PULLUP
    id: fan_button
    filters:
      - delayed_on: 50ms  # Debounce filtr
    on_press:
      then:
        - lambda: |-
            int new_state = (id(state) + 1) % 3;
            id(state) = new_state;

            switch(new_state) {
              case 0:  // OFF
                id(relay_power).turn_off();
                id(relay_speed).turn_off();
                break;
              case 1:  // Speed 1
                id(relay_power).turn_on();
                id(relay_speed).turn_off();
                break;
              case 2:  // Speed 2
                id(relay_power).turn_on();
                id(relay_speed).turn_on();
                break;
            }

# Relé pro ovládání ventilátoru
switch:
  - platform: gpio
    name: "Fan Power"
    pin: GPIO5
    id: relay_power
    inverted: true
    restore_mode: ALWAYS_OFF
    on_turn_on:
      then:
        - lambda: |-
            if (id(relay_speed).state) {
              id(switch_position).publish_state(2);
              id(fan_state).publish_state("2 SPEED");
            } else {
              id(switch_position).publish_state(1);
              id(fan_state).publish_state("1 SPEED");
            }
    on_turn_off:
      then:
        - lambda: |-
            id(relay_speed).turn_off();
            id(switch_position).publish_state(0);
            id(fan_state).publish_state("OFF");


  - platform: gpio
    name: "Fan Speed"
    pin: GPIO6
    id: relay_speed
    inverted: true
    restore_mode: ALWAYS_OFF
    on_turn_on:
      then:
        - lambda: |-
            if (id(relay_power).state) {
              id(switch_position).publish_state(2);
              id(fan_state).publish_state("2 SPEED");
            } else {
              id(relay_power).turn_on();
            }
    on_turn_off:
      then:
        - lambda: |-
            id(switch_position).publish_state(1);
            id(fan_state).publish_state("1 SPEED");

# Vícepolohový přepínač (0-4)
number:
  - platform: template
    name: "Poloha přepínače"
    id: switch_position
    min_value: 0
    max_value: 2
    step: 1
    optimistic: true
    restore_value: false
    on_value:
      then:
        - lambda: |-
            switch (int(x)) {
              case 0:  // OFF
                id(relay_power).turn_off();
                id(relay_speed).turn_off();
                break;
              case 1:  // Speed 1
                id(relay_power).turn_on();
                id(relay_speed).turn_off();
                break;
              case 2:  // Speed 2
                id(relay_power).turn_on();
                id(relay_speed).turn_on();
                break;
            }

# Textový senzor pro zobrazení stavu
text_sensor:
  - platform: template
    name: "Fan State"
    id: fan_state
    icon: mdi:fan
